# -*- coding: utf-8 -*-
"""StratifiedKfold.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e6UcprmbCMvAAz__l_FuYEgh1oANB6-G

#
'''
stratified K fold (이거의 label은 빌딩 없는 거. 빌딩 있는 거) - segmentation label과는 다른 것

1. 빌딩 없는 training dataset (img, GT_seg, -1) 만들기

2. 빌딩 있는 거(img, GT_seg, 0), 없는 거 폴더 따로...? 아니면 파일명으로 구분 (Y_123.png, N_123.png)
-> 폴더 따로 해두는 게 나을 듯!
-> 아니 csv file로 pandas table 만들기 (building_df)
함수명, 빌딩 여부

3. 빌딩 있는 거 폴더, 빌딩 없는 거 csv file에서
sklearn stratifiedKFold

building_kfold = StratifiedKFold(n_splits = 5)
cnt_iter = 0

for train_idx, val_idx in building_kfold.split(building_df, building_df['exist_building'])
  cnt_iter += 1
  train_idx_list = building_df.iloc[train_idx] #이런 식으로!


'''
"""

# 빌딩 없는 이미지 만드는 코드 (random_crop)

original_name = "" # 기준으로 선정
# ...
filename = "None" + original_name

# train.csv에 추가하기 새로 생긴 이미지 정보들

#csv file 만들기
import pandas as pd
from sklearn import model_selection

if __name__ == "__main__":
  #train.csv -> Kfold_train.csv
  df = pd.read_csv("./train.csv")

  #define a new column named 'exist_building(0: none, 1: exist)', "fold"
  df["exist_building"] = 1
  df["fold"] = -1

  #just for stratified test
  for i in range(1000):
    # df[:i]["exist_building"] = 0 # 이거는 안됨
    df.loc[:i, "exist_building"] = 0
  # shuffle
  df = df.sample(frac=1).reset_index(drop=True)

  y = df["exist_building"].values

  # initialize K fold object
  K = 5
  kf = model_selection.StratifiedKFold(n_splits = K)

  # populate the fold column
  for fold, (train_idx, valid_idx) in enumerate(kf.split(X=df, y=y)):
    df.loc[valid_idx, "fold"] = fold

  # save the csv file
  df.to_csv("./kfold_train.csv")

  # remove mask_rle column to save time, memory 아니면 매번 decode해줘야하남,,,?
  #column: img_id(TRAIN_0000-7139 || new created none building img), img_path, exist_building(0 Or 1), fold(0~(K-1))

print(len(df.loc[(df['fold'] == 0) & (df['exist_building'] == 0) ]))
print(len(df.loc[(df['fold'] == 1)  & (df['exist_building'] == 0) ]))
print(len(df.loc[(df['fold'] == 2)  & (df['exist_building'] == 0) ]))
print(len(df.loc[(df['fold'] == 3)  & (df['exist_building'] == 0) ]))
print(len(df.loc[(df['fold'] == 4)  & (df['exist_building'] == 0) ]))
# print (df.index[(df['B'] == 19) | (df['C'] == 19)].tolist())